pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/Bonbonjb/alx-backend-python.git'
        GIT_BRANCH = 'main'
        IMAGE_NAME = 'bonbonjb/messaging_app'
        IMAGE_TAG = 'latest'
        DOCKER_CREDENTIALS_ID = 'dockerhub-creds'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: "${env.GIT_BRANCH}",
                    url: "${env.GIT_REPO}",
                    credentialsId: 'github-credentials'
            }
        }

        stage('Setup Python & Dependencies') {
            steps {
                sh '''
                apt-get update && apt-get install -y python3-pip
                pip3 install --upgrade pip
                pip3 install pytest
                pip3 install -r messaging_app/requirements.txt || true
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                cd messaging_app
                pytest --junitxml=report.xml
                '''
            }
        }

        stage('Archive Test Report') {
            steps {
                junit 'messaging_app/report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                docker build -t $IMAGE_NAME:$IMAGE_TAG messaging_app
                '''
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS_ID}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker push $IMAGE_NAME:$IMAGE_TAG
                    docker logout
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
